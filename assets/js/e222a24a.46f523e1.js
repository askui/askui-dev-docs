"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[63100],{31848:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>r});var i=n(17624),s=n(4552);const l={sidebar_position:2,title:"Recommended Practices"},o="Recommended Practices",a={id:"general/Element Selection/recommended-practices",title:"Recommended Practices",description:"On this page you will learn the different methods to detect elements. Every method has its strength and weaknesses, for example one is more accurate than another but also more effort when using it.",source:"@site/versioned_docs/version-0.17.0/general/03-Element Selection/recommended-practices.md",sourceDirName:"general/03-Element Selection",slug:"/general/Element Selection/recommended-practices",permalink:"/docs/general/Element Selection/recommended-practices",draft:!1,unlisted:!1,editUrl:"https://github.com/askui/askui/tree/main/docs/versioned_docs/version-0.17.0/general/03-Element Selection/recommended-practices.md",tags:[],version:"0.17.0",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Recommended Practices"},sidebar:"docsSidebar",previous:{title:"What's Next?",permalink:"/docs/general/Getting Started/whats-next"},next:{title:"Custom Elements",permalink:"/docs/general/Element Selection/custom-elements"}},c={},r=[{value:"The Overarching Goal",id:"the-overarching-goal",level:2},{value:"Methods of Detecting Elements in AskUI",id:"methods-of-detecting-elements-in-askui",level:2},{value:"Recommendation for Optimal Detection Experience",id:"recommendation-for-optimal-detection-experience",level:2},{value:"Avoid False Negatives by Using More than One Method",id:"avoid-false-negatives-by-using-more-than-one-method",level:2},{value:"Avoid False Positives by Using More than One Method",id:"avoid-false-positives-by-using-more-than-one-method",level:2},{value:"Dealing with Linebreaks in Responsive Text",id:"dealing-with-linebreaks-in-responsive-text",level:2},{value:"Dealing with Changing Custom Elements",id:"dealing-with-changing-custom-elements",level:2},{value:"Recommendation for Fast Speed of Inference",id:"recommendation-for-fast-speed-of-inference",level:2},{value:"Avoid Optical Character Recognition (OCR) on Too Many Element",id:"avoid-optical-character-recognition-ocr-on-too-many-element",level:3},{value:"Avoid Custom Element Detection if Possible",id:"avoid-custom-element-detection-if-possible",level:3},{value:"Scrolling",id:"scrolling",level:2},{value:"Scrolling on Touch Displays",id:"scrolling-on-touch-displays",level:3},{value:"Scrolling With Mouse Wheel",id:"scrolling-with-mouse-wheel",level:3},{value:"Scrolling With Key Press",id:"scrolling-with-key-press",level:3},{value:"Wait for an Element to Appear",id:"wait-for-an-element-to-appear",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"recommended-practices",children:"Recommended Practices"}),"\n",(0,i.jsx)(t.p,{children:"On this page you will learn the different methods to detect elements. Every method has its strength and weaknesses, for example one is more accurate than another but also more effort when using it."}),"\n",(0,i.jsx)(t.h2,{id:"the-overarching-goal",children:"The Overarching Goal"}),"\n",(0,i.jsx)(t.p,{children:"As a user you want to detect elements reliably. There are two axes of reliability:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"False Positives: Detecting the wrong element or detecting more elements than you want to detect."}),"\n",(0,i.jsx)(t.li,{children:"False Negatives: Detecting no element where there is one."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"methods-of-detecting-elements-in-askui",children:"Methods of Detecting Elements in AskUI"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Ranked by detection accuracy:"})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Method"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Advantages"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Disadvantages"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"custom element"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Detects elements by image-in-image search"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Reliable"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Elaborate creation"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"text"}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["Finds an element of class text. If you pass an argument ",(0,i.jsx)(t.code,{children:"text('hello')"})," it also uses text-recognition"]}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Fast to write. High reliability"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Dependent on resolution, font and linebreaks"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"button, textfield, checkbox, ..."}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Finds an element of the class"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Reliable when element is clearly distinguishible"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Sometimes fails if element, for example a button, is clearly distinguishable as a specific class"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"icon"}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["Finds elements of type icon and then filters for ",(0,i.jsx)(t.em,{children:"specific"})," icon"]}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Detects icons reliably"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Naming of icons inconsistent."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"matching"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Natural language description."}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Works on logos and images with text; Needs experimentation for detecting the correct element"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Only finds the best matching element"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"recommendation-for-optimal-detection-experience",children:"Recommendation for Optimal Detection Experience"}),"\n",(0,i.jsxs)(t.p,{children:["The general recommendation is to use a class-based method like ",(0,i.jsx)(t.code,{children:"text"}),", ",(0,i.jsx)(t.code,{children:"button"})," or ",(0,i.jsx)(t.code,{children:"textfield"})," first. When you run into non-detectable elements, like a button AskUI does not detect, you can use a custom element."]}),"\n",(0,i.jsx)(t.p,{children:"Here are two problems to consider while implementing workflows:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Responsive text causes linebreaks: Custom element detection and text detection fails."}),"\n",(0,i.jsx)(t.li,{children:"The color of element/text changes during workflow."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"avoid-false-negatives-by-using-more-than-one-method",children:"Avoid False Negatives by Using More than One Method"}),"\n",(0,i.jsxs)(t.p,{children:["Detecting elements reliably can be achieved through chaining detection methods with ",(0,i.jsx)(t.code,{children:"or()"}),". Chain them always from highest to lowest quality, so the highest quality methods get executed first. This makes sure to minimize the chance of ",(0,i.jsx)(t.em,{children:"false positive"})," detection of wrong elements. Here are a few examples of how that looks like:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"// custom element or() class based method or() matching\nawait askui.click().customElement({\n                     customImage: 'custom_elements/submit.button.png'\n                   }).leftOf().button().withText('Cancel')\n                   .or().button().withText('Submit')\n                   .or().button().containsText('Submit')\n                   .or().element().matching('green submit button').leftOf().button().withText('Cancel').exec();\n\nawait askui.click().customElement({customImage: 'custom_elements/figure.icon.png'}).leftOf().text('Maps')\n                   .or().icon().withText('human')\n                   .or().element().matching('a human figure icon').leftOf().text('Maps').exec();\n"})}),"\n",(0,i.jsx)(t.h2,{id:"avoid-false-positives-by-using-more-than-one-method",children:"Avoid False Positives by Using More than One Method"}),"\n",(0,i.jsxs)(t.p,{children:["When you want to detect a specific button and AskUI falsely detects more elements, than you can use ",(0,i.jsx)(t.code,{children:"and()"})," to use more than one method. This makes the detection more specific:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"await askui.click().customElement({\n                     customImage: 'custom_elements/submit.button.png'\n                   }).leftOf().button().withText('Cancel')\n                   .and()\n                   .button().withText('Submit')\n                   .exec();\n"})}),"\n",(0,i.jsx)(t.h2,{id:"dealing-with-linebreaks-in-responsive-text",children:"Dealing with Linebreaks in Responsive Text"}),"\n",(0,i.jsx)(t.p,{children:"AskUI detects based visually. If text is responsive and a linebreak is added the following text detection fails:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"await aui.click()\n         .text('A very long text that breaks after the comma, oh no!')\n         .exec();\n"})}),"\n",(0,i.jsxs)(t.p,{children:["You have to change the code to use ",(0,i.jsx)(t.code,{children:"containsText()"})," and match for the start of the text:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"await aui.click()\n         .text('A very long text that breaks after the comma, oh no!')\n         .containsText('A very long text that')\n         .exec();\n"})}),"\n",(0,i.jsx)(t.h2,{id:"dealing-with-changing-custom-elements",children:"Dealing with Changing Custom Elements"}),"\n",(0,i.jsxs)(t.p,{children:["You may have a text that can change its color and thus you can not use a ",(0,i.jsx)(t.em,{children:"single"})," custom element. When you chain a custom element for each color with ",(0,i.jsx)(t.code,{children:"or"})," the text can be detected reliably:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"await askui.click().customElement({customImage: 'custom_elements/red.text.png'})\n                   .or()\n                   .customElement({customImage: 'custom_elements/blue.text.png'}).exec()\n"})}),"\n",(0,i.jsx)(t.h2,{id:"recommendation-for-fast-speed-of-inference",children:"Recommendation for Fast Speed of Inference"}),"\n",(0,i.jsx)(t.h3,{id:"avoid-optical-character-recognition-ocr-on-too-many-element",children:"Avoid Optical Character Recognition (OCR) on Too Many Element"}),"\n",(0,i.jsxs)(t.p,{children:["If you use ",(0,i.jsx)(t.code,{children:"containsText()"}),", ",(0,i.jsx)(t.code,{children:"withText()"}),", ",(0,i.jsx)(t.code,{children:"withExactText()"})," or ",(0,i.jsx)(t.code,{children:"withTextRegex()"})," ",(0,i.jsx)(t.strong,{children:"OCR"})," is applied to all elements detected on your screen. This can slow down AskUI. It is more efficient to narrow down the elements first. For example, if you want to click a ",(0,i.jsx)(t.code,{children:"button"})," with a specific text you should select all buttons first."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"// Do this\nawait aui.click().button('See here').exec();\nawait aui.clickText('Sign in');\n\n// And NOT this\nawait aui.click('See here').exec();\nawait aui.click('Sign in').exec();\n"})}),"\n",(0,i.jsx)(t.h3,{id:"avoid-custom-element-detection-if-possible",children:"Avoid Custom Element Detection if Possible"}),"\n",(0,i.jsxs)(t.p,{children:["If you use ",(0,i.jsx)(t.code,{children:"customElement()"})," you are doing an image-in-image search. Use this sparingly for elements that you can not detect as the execution time is sometimes slower!"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"// Do this\nawait aui.clickButton('Login');\nawait aui.clickText('Overview');\n\n// And NOT this\nawait aui.click().customElement({\n  customImage: '.../login_button.png', \n  name: 'login button',\n}).exec();\nawait aui.click().customElement({\n  customImage: '.../text_overview.png', \n  name: 'overview button',\n}).exec();\n"})}),"\n",(0,i.jsx)(t.h2,{id:"scrolling",children:"Scrolling"}),"\n",(0,i.jsx)(t.p,{children:"When you use AskUI you can only interact with elements that you can see on your screen. Therefore you have to scroll down/sideways to interact with currently invisible elements."}),"\n",(0,i.jsx)(t.h3,{id:"scrolling-on-touch-displays",children:"Scrolling on Touch Displays"}),"\n",(0,i.jsx)(t.p,{children:"On touch displays you have to recreate the swipe gesture:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"// Touch the display with your finger, move finger to the left, release\nawait aui.mouseToggleDown().exec()\nawait aui.moveMouseRelatively(-1500, 0).exec()\nawait aui.mouseToggleUp().exec()\n"})}),"\n",(0,i.jsx)(t.h3,{id:"scrolling-with-mouse-wheel",children:"Scrolling With Mouse Wheel"}),"\n",(0,i.jsxs)(t.p,{children:["If you want to scroll with your mouse wheel you can use the ",(0,i.jsx)(t.code,{children:"scroll()"})," action:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"// Scroll 10 down in y direction<>\nawait aui.scroll(0, -10).exec()\n"})}),"\n",(0,i.jsx)(t.h3,{id:"scrolling-with-key-press",children:"Scrolling With Key Press"}),"\n",(0,i.jsxs)(t.p,{children:["If you want to scroll with a key press you could use your arrow keys (",(0,i.jsx)(t.code,{children:"up"}),", ",(0,i.jsx)(t.code,{children:"down"}),", ",(0,i.jsx)(t.code,{children:"left"}),", ",(0,i.jsx)(t.code,{children:"right"})," ) or the ",(0,i.jsx)(t.code,{children:"pagedown"}),"-key."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"// Press down arrow key\nawait aui.pressKey('down').exec()\n\n// Press up arrow key\nawait aui.pressKey('up').exec()\n\n// Scroll down a page\nawait aui.pressKey('pagedown').exec()\n\n// Scroll up a page\nawait aui.pressKey('pageup').exec()\n"})}),"\n",(0,i.jsx)(t.h2,{id:"wait-for-an-element-to-appear",children:"Wait for an Element to Appear"}),"\n",(0,i.jsxs)(t.p,{children:["AskUI implements a careful retry strategy to wait for an element to appear. But sometimes this is not long enough.\nYou can wait for an element to appear with the ",(0,i.jsxs)(t.a,{href:"/docs/api/Convenience/waituntil",children:["convenience function ",(0,i.jsx)(t.code,{children:"waitUntil()"})," API docs"]}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"await aui.waitUntil(aui.expect().text('GitHub').exists());\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.M)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},4552:(e,t,n)=>{n.d(t,{I:()=>a,M:()=>o});var i=n(11504);const s={},l=i.createContext(s);function o(e){const t=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(l.Provider,{value:t},e.children)}}}]);